Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.File;\r\nimport java.io.IOException;\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    static final char CLEAR = '-';\r\n    static final char HIT = 'v';\r\n    static final char MISS = 'x';\r\n    static final char ALIVE = '#';\r\n    static final char ATTACKED = 'x';\r\n    static final int DIR = 1;\r\n    static final int MARGIN = 2;\r\n    static final int OVERLAP = 3;\r\n    static final int ADJACENT = 4;\r\n\r\n    static final String ENTER_BATTLESHIPS = \"Enter the battleships sizes\"\r\n    public static Scanner scanner;\r\n    public static Random rnd;\r\n\r\n    /*\r\n    * the function receive the board size from the user,\r\n    * both row and col sizes\r\n    * @return arr - contains rownum in arr[0] and colnum in arr[1]\r\n    *  */\r\n    public static int[] inputBoardSize(){\r\n        System.out.println(\"Enter the board size\");\r\n        String boardSize = scanner.nextLine();\r\n        int rowNum = (int) boardSize.charAt(0) - 48;//converting into int\r\n        int colNum = (int) boardSize.charAt(2) - 48;//same\r\n        int [] arr = {rowNum, colNum};\r\n        return arr;\r\n    }\r\n\r\n    /*\r\n    * the function creates an empty (\"-\") board in the fitting size\r\n    * @param n - number of lines in array\r\n    * @param m - number of rows in array\r\n    *\r\n    * @returns an empty board (array of size n*m)\r\n    * */\r\n    public static int[][] initializeBoard(int n, int m){\r\n        int[][] board = new int[n][m];\r\n        for(int i=0; i < n; i++){\r\n            for(int j=0; j < m; i++){\r\n                board[i][j] = CLEAR;\r\n            }\r\n        }\r\n        return board;\r\n    }\r\n\r\n    /*\r\n    * the function receives battleships amounts and sizes as string from user\r\n    * the string format is \"n1Xs1n2Xs1...\"\r\n    *\r\n    * @returns the string received from user\r\n    * */\r\n    public static String inputBattleships(){\r\n        System.out.println(ENTER_BATTLESHIPS);\r\n        String battleships = scanner.nextLine();\r\n        return battleships;\r\n    }\r\n    public static void input_battleships_placement(int[][] game_board, int n, int m, String battleshipsString){\r\n\r\n    }\r\n    public static void placeUserBattleships(){\r\n\r\n    }\r\n    public static void printBoard(){\r\n\r\n    }\r\n    public static void placeComputerBattleships(){\r\n\r\n    }\r\n    public static int validBattleships(){\r\n\r\n    }\r\n    public static void printValidation(){\r\n\r\n    }\r\n    public static void battleshipGame() {\r\n        // TODO: Add your code here (and add more methods).\r\n    }\r\n\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        String path = args[0];\r\n        scanner = new Scanner(new File(path));\r\n        int numberOfGames = scanner.nextInt();\r\n        scanner.nextLine();\r\n\r\n        System.out.println(\"Total of \" + numberOfGames + \" games.\");\r\n\r\n        for (int i = 1; i <= numberOfGames; i++) {\r\n            scanner.nextLine();\r\n            int seed = scanner.nextInt();\r\n            rnd = new Random(seed);\r\n            scanner.nextLine();\r\n            System.out.println(\"Game number \" + i + \" starts.\");\r\n            battleshipGame();\r\n            System.out.println(\"Game number \" + i + \" is over.\");\r\n            System.out.println(\"------------------------------------------------------------\");\r\n        }\r\n        System.out.println(\"All games are over.\");\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision d948ac7dc95a6188e447d0481e5711ddec0a4327)
+++ b/src/Main.java	(date 1681939667889)
@@ -1,5 +1,6 @@
 import java.io.File;
 import java.io.IOException;
+import java.util.Arrays;
 import java.util.Random;
 import java.util.Scanner;
 
@@ -10,12 +11,14 @@
     static final char MISS = 'x';
     static final char ALIVE = '#';
     static final char ATTACKED = 'x';
+    static final int VALID = 0;
     static final int DIR = 1;
     static final int MARGIN = 2;
     static final int OVERLAP = 3;
     static final int ADJACENT = 4;
 
-    static final String ENTER_BATTLESHIPS = "Enter the battleships sizes"
+    static final String ENTER_BATTLESHIPS = "Enter the battleships sizes";
+    static final String ENTER_BATTLESHIPS_PLACE = "Enter location and orientation for battleship of size ";
     public static Scanner scanner;
     public static Random rnd;
 
@@ -40,8 +43,8 @@
     *
     * @returns an empty board (array of size n*m)
     * */
-    public static int[][] initializeBoard(int n, int m){
-        int[][] board = new int[n][m];
+    public static char[][] initializeBoard(int n, int m){
+        char[][] board = new char[n][m];
         for(int i=0; i < n; i++){
             for(int j=0; j < m; i++){
                 board[i][j] = CLEAR;
@@ -50,19 +53,94 @@
         return board;
     }
 
+    /*
+    *
+    *
+    * */
+    public static void resetBoard(char[][] board, int n, int m){
+        for(int i=0; i < n; i++){
+            for(int j=0; j < m; i++){
+                board[i][j] = CLEAR;
+            }
+        }
+    }
+    /*
+    *
+    *
+    *
+    * */
+    public static void manageInputBattleships(char[][] gameBoard, int n, int m){
+        int[][] battleships = inputBattleships();
+        while(!manageBattleshipsPlacement(gameBoard, n, m, battleships)){
+            battleships = inputBattleships();
+        }
+    }
+
     /*
     * the function receives battleships amounts and sizes as string from user
-    * the string format is "n1Xs1n2Xs1..."
+    * and extracts the information to a more convenient data structure
     *
-    * @returns the string received from user
+    * @returns array of battleships, each object of the array is a vector of number of battleships
+    * according to size
     * */
-    public static String inputBattleships(){
+    public static int[][] inputBattleships(){
+        int len;
+        String[] nXs;
         System.out.println(ENTER_BATTLESHIPS);
-        String battleships = scanner.nextLine();
-        return battleships;
+        String battleships = scanner.nextLine(); //receives a string in format "n1Xs1 n2Xs2 ..."
+        String[] splitBattleships = battleships.split("\\s+"); //splits to battleships sorted by length
+        len = splitBattleships.length;
+        int[][] battleshipsArr = new int[len][2];
+        for(int i = 0; i < len ; i++){
+            nXs = splitBattleships[i].split("X"); //splits to number of ships and length
+            battleshipsArr[i][0] = Integer.parseInt(nXs[0]);
+            battleshipsArr[i][1] = Integer.parseInt(nXs[1]);
+        }
+        return battleshipsArr;
+    }
+    /*
+    * receives placement info: location(x,y) and direction(orientation) and arranges it in an array
+    *
+    * @param size: size of ship that needs to be placed;
+    *
+    * @return integer array that contains {x,y,dir}
+    * */
+    public static int[] inputBattleshipPlacement(int size){
+        int[] splitInt = new int[3];
+        System.out.println(ENTER_BATTLESHIPS_PLACE+size);
+        String battleshipPlacementStr = scanner.nextLine(); //"x, y, orientation"
+        String[] splitStr = battleshipPlacementStr.split(", ");// splits information
+        //enters the info into an int array
+        for(int i = 0; i<3; i++){
+            splitInt[i] = Integer.parseInt(splitStr[i]);
+        }
+        return splitInt;
     }
-    public static void input_battleships_placement(int[][] game_board, int n, int m, String battleshipsString){
 
+    /*
+    *
+    *
+    *
+    * */
+    public static boolean manageBattleshipsPlacement(char[][] gameBoard, int n, int m, int[][] battleships){
+        int size, validVal;
+        int[] placement;
+        int len = battleships.length;
+        for(int i = 0; i < len; i++){
+            for(int j = 0; j < battleships[i][0]; j++){
+                placement = inputBattleshipPlacement(battleships[i][0]);
+                size = battleships[i][1];
+                validVal = validBattleships(gameBoard, n, m, size, placement[0], placement[1], placement[2]);
+                if(validVal==VALID){
+                    placeUserBattleships(gameBoard, size, placement[0], placement[1], placement[2]);
+                }
+                else {
+                    resetBoard(gameBoard, n, m);
+                    return false;
+                }
+            }
+        }
+        return true;
     }
     public static void placeUserBattleships(){
 
@@ -73,7 +151,7 @@
     public static void placeComputerBattleships(){
 
     }
-    public static int validBattleships(){
+    public static int validBattleships(char[][] board, int n, int m, int size, int x, int y, int dir){
 
     }
     public static void printValidation(){
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"65022125-0cba-4cfe-a714-707aa23e2603\" name=\"Changes\" comment=\"copying given main file from moodle\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2OeY55k9WBhHIhe6vqvrAJOq7l1\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"65022125-0cba-4cfe-a714-707aa23e2603\" name=\"Changes\" comment=\"\" />\r\n      <created>1681922328002</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1681922328002</updated>\r\n      <workItem from=\"1681922329103\" duration=\"3207000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first commit\">\r\n      <created>1681922443856</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681922443856</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"copying given main file from moodle\">\r\n      <created>1681923625860</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681923625860</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first commit\" />\r\n    <MESSAGE value=\"copying given main file from moodle\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"copying given main file from moodle\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d948ac7dc95a6188e447d0481e5711ddec0a4327)
+++ b/.idea/workspace.xml	(date 1681932327491)
@@ -4,7 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="65022125-0cba-4cfe-a714-707aa23e2603" name="Changes" comment="copying given main file from moodle">
+    <list default="true" id="65022125-0cba-4cfe-a714-707aa23e2603" name="Changes" comment="implemented initializeBoard and inputBattleships functions">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
     </list>
@@ -25,15 +25,15 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -58,7 +58,14 @@
       <option name="project" value="LOCAL" />
       <updated>1681923625860</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="implemented initializeBoard and inputBattleships functions">
+      <created>1681931386651</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1681931386651</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -78,6 +85,7 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="first commit" />
     <MESSAGE value="copying given main file from moodle" />
-    <option name="LAST_COMMIT_MESSAGE" value="copying given main file from moodle" />
+    <MESSAGE value="implemented initializeBoard and inputBattleships functions" />
+    <option name="LAST_COMMIT_MESSAGE" value="implemented initializeBoard and inputBattleships functions" />
   </component>
 </project>
\ No newline at end of file
